package com.pibs.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.pibs.constant.ActionConstant;
import com.pibs.constant.MapConstant;
import com.pibs.constant.MiscConstant;
import com.pibs.constant.ModuleConstant;
import com.pibs.form.LoginFormBean;
import com.pibs.model.ListValue;
import com.pibs.model.User;
import com.pibs.service.ServiceManager;
import com.pibs.service.ServiceManagerImpl;
import com.pibs.util.PIBSUtils;

public class LoginValidateAction extends Action{
	
	private final static Logger logger = Logger.getLogger(LoginValidateAction.class);

	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		
		//logger.info("Enter Login validate class....");
		PIBSUtils.writeLogInfo(logger, "Enter Login validate class......");
		
		LoginFormBean formBean = (LoginFormBean) form;
		
		User user = new User();
		user.setUserName(formBean.getUserName());
		user.setPassword(formBean.getPassword());
		
		HashMap<String,Object> dataMap = new HashMap<String, Object>();
        dataMap.put(MapConstant.MODULE, ModuleConstant.LOGIN);
        dataMap.put(MapConstant.ACTION, ActionConstant.VALIDATEUSER);
        dataMap.put(MapConstant.CLASS_DATA, user);
        
        ServiceManager service = new ServiceManagerImpl();
        Map<String, Object> resultMap = service.executeRequest(dataMap);
        
        String forwardAction = ActionConstant.NONE;
        
        if (resultMap!=null && !resultMap.isEmpty()) {
        	boolean isUserValid = Boolean.parseBoolean((String)resultMap.get(MapConstant.BOOLEAN_DATA));
        	if (isUserValid) {
        		user = (User) resultMap.get(MapConstant.CLASS_DATA);
        		//START put the user details in session
        		request.getSession().setAttribute(MiscConstant.USER_SESSION, user);
//        		request.getSession().setAttribute(MiscConstant.USER_ROLE_SESSION, user.getRole());
//        		storeLOVToSession(request); //old code
        		PIBSUtils.storeLOVToSession(request);//enhanced code
        		//END
        		formBean.setUserAccountValidated("true");
        		forwardAction = ActionConstant.SUCCESS;
        		//logger.info("User account confirmed valid...go to main screen..");
        		PIBSUtils.writeLogInfo(logger, "User account confirmed valid...go to main screen......");
        	} else {
        		//logger.info("User account invalid!");
        		formBean.setUserAccountValidated("invalid");
        		PIBSUtils.writeLogInfo(logger, "Invalid user account......");
        		forwardAction = ActionConstant.FAILED;
        	}
        }
        
        //logger.info("Exit Login validate class...");
        PIBSUtils.writeLogInfo(logger, "Exit Login validate class.......");
        
        return mapping.findForward(forwardAction);
	}
	
	
	/**
	 * //storeLOVToSession old code below used in TransportWeb
	 * 
	 * @param request
	 * @throws Exception
	 */
//	private void storeLOVToSession(HttpServletRequest request) throws Exception{
//		
//		ServiceManager service = new ServiceManagerImpl();
//    
//		//Patient
//		ListValue lov = new ListValue();
//		lov.setListTypeId(MiscConstant.LOVTYPE_PATIENT_TYPE);
//		
//		HashMap<String,Object> dataMap = new HashMap<String, Object>();
//        dataMap.put(MapConstant.MODULE, ModuleConstant.LIST_VALUE);
//        dataMap.put(MapConstant.ACTION, ActionConstant.GET_DATA_BY_LIST_TYPE);
//        dataMap.put(MapConstant.CLASS_DATA, lov);
//        
//        Map<String, Object> resultMap = service.executeRequest(dataMap);
//        
//		List<?> lovList = (ArrayList<?>) resultMap.get(MapConstant.CLASS_DATA);
//		request.getSession().setAttribute(MiscConstant.LOVTYPE_PATIENT_TYPE_SESSION, lovList);
//		
//		//Medical Supply
//		resultMap = null;
//		lovList = null;
//		
//		lov = new ListValue();
//		lov.setListTypeId(MiscConstant.LOVTYPE_MEDICAL_SUPPLY_TYPE);
//		
//		dataMap = new HashMap<String, Object>();
//        dataMap.put(MapConstant.MODULE, ModuleConstant.LIST_VALUE);
//        dataMap.put(MapConstant.ACTION, ActionConstant.GET_DATA_BY_LIST_TYPE);
//        dataMap.put(MapConstant.CLASS_DATA, lov);
//        
//        resultMap = service.executeRequest(dataMap);
//        
//        lovList = (ArrayList<?>) resultMap.get(MapConstant.CLASS_DATA);
//		request.getSession().setAttribute(MiscConstant.LOVTYPE_MEDICAL_SUPPLY_TYPE_SESSION, lovList);
//		
//		//Surgery
//		resultMap = null;
//		lovList = null;
//		
//		lov = new ListValue();
//		lov.setListTypeId(MiscConstant.LOVTYPE_SURGERY_TYPE);
//		
//		dataMap = new HashMap<String, Object>();
//        dataMap.put(MapConstant.MODULE, ModuleConstant.LIST_VALUE);
//        dataMap.put(MapConstant.ACTION, ActionConstant.GET_DATA_BY_LIST_TYPE);
//        dataMap.put(MapConstant.CLASS_DATA, lov);
//        
//        resultMap = service.executeRequest(dataMap);
//        
//        lovList = (ArrayList<?>) resultMap.get(MapConstant.CLASS_DATA);
//		request.getSession().setAttribute(MiscConstant.LOVTYPE_SURGERY_TYPE_SESSION, lovList);
//		
//		//Entity
//		resultMap = null;
//		lovList = null;
//		
//		lov = new ListValue();
//		lov.setListTypeId(MiscConstant.LOVTYPE_ENTITY_TYPE);
//		
//		dataMap = new HashMap<String, Object>();
//        dataMap.put(MapConstant.MODULE, ModuleConstant.LIST_VALUE);
//        dataMap.put(MapConstant.ACTION, ActionConstant.GET_DATA_BY_LIST_TYPE);
//        dataMap.put(MapConstant.CLASS_DATA, lov);
//        
//        resultMap = service.executeRequest(dataMap);
//        
//        lovList = (ArrayList<?>) resultMap.get(MapConstant.CLASS_DATA);
//		request.getSession().setAttribute(MiscConstant.LOVTYPE_ENTITY_TYPE_SESSION, lovList);
//		
//		
//		//PatientStatus
//		resultMap = null;
//		lovList = null;
//		
//		lov = new ListValue();
//		lov.setListTypeId(MiscConstant.LOVTYPE_PATIENT_STATUS_TYPE);
//		
//		dataMap = new HashMap<String, Object>();
//        dataMap.put(MapConstant.MODULE, ModuleConstant.LIST_VALUE);
//        dataMap.put(MapConstant.ACTION, ActionConstant.GET_DATA_BY_LIST_TYPE);
//        dataMap.put(MapConstant.CLASS_DATA, lov);
//        
//        resultMap = service.executeRequest(dataMap);
//        
//        lovList = (ArrayList<?>) resultMap.get(MapConstant.CLASS_DATA);
//		request.getSession().setAttribute(MiscConstant.LOVTYPE_PATIENT_STATUS_TYPE_SESSION, lovList);
//		
//		//ProfessionalStatus
//		resultMap = null;
//		lovList = null;
//		
//		lov = new ListValue();
//		lov.setListTypeId(MiscConstant.LOVTYPE_PROFESSIONAL_STATUS_TYPE);
//		
//		dataMap = new HashMap<String, Object>();
//        dataMap.put(MapConstant.MODULE, ModuleConstant.LIST_VALUE);
//        dataMap.put(MapConstant.ACTION, ActionConstant.GET_DATA_BY_LIST_TYPE);
//        dataMap.put(MapConstant.CLASS_DATA, lov);
//        
//        resultMap = service.executeRequest(dataMap);
//        
//        lovList = (ArrayList<?>) resultMap.get(MapConstant.CLASS_DATA);
//		request.getSession().setAttribute(MiscConstant.LOVTYPE_PROFESSIONAL_STATUS_TYPE_SESSION, lovList);
//		
//		//PatientCaseStatus
//		resultMap = null;
//		lovList = null;
//		
//		lov = new ListValue();
//		lov.setListTypeId(MiscConstant.LOVTYPE_PATIENT_CASE_STATUS_TYPE);
//		
//		dataMap = new HashMap<String, Object>();
//        dataMap.put(MapConstant.MODULE, ModuleConstant.LIST_VALUE);
//        dataMap.put(MapConstant.ACTION, ActionConstant.GET_DATA_BY_LIST_TYPE);
//        dataMap.put(MapConstant.CLASS_DATA, lov);
//        
//        resultMap = service.executeRequest(dataMap);
//        
//        lovList = (ArrayList<?>) resultMap.get(MapConstant.CLASS_DATA);
//		request.getSession().setAttribute(MiscConstant.LOVTYPE_PATIENT_CASE_STATUS_TYPE_SESSION, lovList);
//		
//		//ProfessionalDesignation
//		resultMap = null;
//		lovList = null;
//		
//		lov = new ListValue();
//		lov.setListTypeId(MiscConstant.LOVTYPE_PROFESSIONAL_DESIGNATION_TYPE);
//		
//		dataMap = new HashMap<String, Object>();
//        dataMap.put(MapConstant.MODULE, ModuleConstant.LIST_VALUE);
//        dataMap.put(MapConstant.ACTION, ActionConstant.GET_DATA_BY_LIST_TYPE);
//        dataMap.put(MapConstant.CLASS_DATA, lov);
//        
//        resultMap = service.executeRequest(dataMap);
//        
//        lovList = (ArrayList<?>) resultMap.get(MapConstant.CLASS_DATA);
//		request.getSession().setAttribute(MiscConstant.LOVTYPE_PROFESSIONAL_DESIGNATION_TYPE_SESSION, lovList);
//		        		
//	}

}
