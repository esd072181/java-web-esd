package com.drms.controller;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.ModelAndView;

import com.drms.bo.UserAccountBo;
import com.drms.constant.DRMSConstant;
import com.drms.model.UserAccount;
import com.drms.util.CRMSUtil;

@Controller
@SessionAttributes(value =  {"userid","roleid","name"})
public class UserAuthenticationController {
	
	private final static Logger logger = Logger.getLogger(UserAuthenticationController.class);
	
	@Autowired
	UserAccountBo userAccountBo;
	
	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public ModelAndView login(ModelMap model) throws Exception {
		
		//if session valid go to home
		if (CRMSUtil.isUserSessionValid(model)) {
			logger.info(DRMSConstant.USER_VALID_SESSION);
			return new ModelAndView("main/home");	
		}
						    
		ModelAndView mv = new ModelAndView();
		mv.setViewName("security/login");
		mv.addObject("userAccount", new UserAccount());
		mv.addObject("isValidated", "no");
		
		logger.info("Go to login");
		
		return mv;
	}
	
	@RequestMapping(value = "/loginValidate", method = RequestMethod.POST)
	public ModelAndView loginValidate(@ModelAttribute("userAccount") UserAccount userAccount, BindingResult result, ModelMap model) throws Exception {
		
		//if valid already then go to home
		if (CRMSUtil.isUserSessionValid(model)) {
			logger.info(DRMSConstant.USER_VALID_SESSION);
			return new ModelAndView("main/home");	
		}
		
		UserAccount user = userAccountBo.findByUserNamePassword(userAccount.getUserName(), userAccount.getPassword());

		ModelAndView mv = new ModelAndView();
		
		if (user!=null) {
			//set the user attributes to the session var
			logger.info("User " + user.getId() + " log-in");
			mv.addObject("userid", user.getId());
			mv.addObject("roleid", user.getRole().getId());
			mv.addObject("name", user.getProf().getFullName());
			mv.setViewName("main/home");
		} else {
			logger.info("Invalid username or password");
			mv.setViewName("security/login");
			mv.addObject("isValidated", "failed");
		}
		
		return mv;
	}
	
	@RequestMapping(value = "/logout", method = RequestMethod.GET)
	public ModelAndView logout(WebRequest request, SessionStatus status, ModelMap model) throws Exception {
						
		logger.info("User " + model.get("userid") + " log-out");
		
		status.setComplete();
		request.removeAttribute("userid", WebRequest.SCOPE_SESSION);
		
		return new ModelAndView("security/login","userAccount", new UserAccount());
	}
	
}
